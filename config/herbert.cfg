# # # # # # # # # # # # OSTATECZNA WERSJA 2.0 config.cfg # # # # # # # # # # # #
[paths]
train = null
dev = null
vectors = null
init_tok2vec = null

[system]
gpu_allocator = "pytorch"
seed = 0

[nlp]
lang = "pl"
pipeline = ["transformer", "ner"]
batch_size = 128
tokenizer = {"@tokenizers":"spacy.Tokenizer.v1"}

[components]

[components.ner]
factory = "ner"
scorer = {"@scorers":"spacy.ner_scorer.v1"}

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = true

[components.ner.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0
pooling = {"@layers":"reduce_mean.v1"}

[components.transformer]
factory = "transformer"
# TA SEKCJA POZOSTAJE CZYSTA - bez span_getter

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "allegro/herbert-base-cased"

# TO JEST OSTATECZNA, POPRAWNA STRUKTURA
# 'get_spans' jest zagnieżdżonym blokiem w 'model', a nie osobnym parametrem.
[components.transformer.model.get_spans]
@span_getters = "spacy-transformers.doc_spans.v1"


[corpora]
[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}

[training]
train_corpus = "corpora.train"
dev_corpus = "corpora.dev"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
# było 0.1
dropout = 0.0
# było 1
accumulate_gradient = 8
patience = 1600
max_epochs = 0
max_steps = 20000
eval_frequency = 200
frozen_components = []
annotating_components = []

#[training.batcher]
#@batchers = "spacy.batch_by_words.v1"
#discard_oversize = false
#tolerance = 0.2

#[training.batcher.size]
#@schedules = "compounding.v1"
#start = 100
#stop = 1000
#compound = 1.001

[training.batcher]
@batchers = "spacy.batch_by_sequence.v1"
size = 8

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 1e-8
learn_rate = 0.0001

#[training.optimizer.learn_rate]
#@schedules = "slanted_triangular.v1"
# Zmniejszamy maksymalną szybkość, aby kroki były ostrożniejsze
#max_rate = 5e-6
#cut_frac = 0.1
#num_steps = 20000 

[initialize]
vectors = ${paths.vectors}
# # # # # # # # # # # # KONIEC PLIKU # # # # # # # # # # # #